1) perl скрипт, който чете портовете и пише в определен като аргумент csv файл. Необходимо е да се разучи дали можем да подкараме 1-Wire драйвър за олинуксиното, както и за това как се използват SPI защото АЦПтата които съм поръчал са със SPI изход. Реших да взема такива вместо паралелни, защото на паралелните също трябва да им се подава точно определен клок, семплиращ сигнал и четене на данните, което го прави еднакво по сложност с SPI. Поне за SPI има много готови неща и е баламско.

2) този perl скрипт ще се вика от cron веднъж на 30 секунди и съответно пише в общ csv файл за деня. Втора cron задача ще върви на всеки 24 часа и ще парсва данните за последните 24 часа от общия (временен) csv файл и ще ги запазва в друг csv, който ще е в архивна папка. Трети cron ще върви веднъж на 6 месеца или година и съответно парсва в отделен отчет за годината.

3) на олинуксиното съм сложил едно апаче, но трябва htmlите да се пипнат, както и dygraph.js тъй като в момента графиката се отваря само на десктоп машини

4) на заден план ще върви процес rtl_power за целия спектър, като ще интегрира постоянно. нужен е скрипт, който да отделя част от csv файла (за 24 часа) и да прави отчет за спектъра (waterfall chart). има написана програмка на питон за това и работи доста добре, ето повече инфо http://kmkeen.com/rtl-power/  както и самия скрипт https://github.com/keenerd/rtl-sdr-misc/tree/master/heatmap

5) Нужно е да се направи един преобразувател честота в напрежение за анемометъра, както и да се напише в първия пърл скрипт алгоритъм за гайгеровия брояч с коефициент за калибриране. Това, което го имаше в на камен атмегата от дипломната.

6) Това може и да не се осъществи, идея да използваме много от останалите портове за да направим един 7-сегментен часовник/термометър. Лесно е, но иска малко играчка.

7) Още една идея е да се сложи IP камера, която да е ембедната на уеб страницата.

8) Най-накрая данните е хубаво да се запазват на друг сървър в случай че нещо стане с платката, например я удари мълниня не дай си боже.

